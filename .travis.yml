dist: bionic
language: php
cache:
  directories:
    - vendor
    - $HOME/.composer/cache
    - $HOME/.php-cs-fixer

services:
  - docker

branches:
  except:
    - /\+travis\d+$/

php:
  - 7.4

# https://docs.travis-ci.com/user/environment-variables/#defining-multiple-variables-per-item
env:
  global:
    - GK_ENVIRONMENT=testing

# https://docs.travis-ci.com/user/database-setup/#postgresql
addons:
  apt:
    packages:
      - moreutils
      - gettext

# https://andidittrich.de/2017/06/travisci-setup-mysql-tablesdata-before-running-tests.html
before_install:
  # Packages overrides
  - sudo apt-get --yes remove postgresql\* postgis\*
  # Crowdin
  - wget --no-verbose https://artifacts.crowdin.com/repo/deb/crowdin.deb -O crowdin.deb
  - sudo dpkg -i crowdin.deb
  # Build docker images locally
  - docker-compose -f docker-compose.local.yml build --pull
  # Stack Postgres
  - docker-compose -f docker-compose.local.yml up -d postgres
  # Database
  #  - psql -c 'create database geokrety;' -U postgres
  #  - psql -c "CREATE USER geokrety WITH PASSWORD 'geokrety';" -U postgres
  - export PGUSER=geokrety
  - export PGPASSWORD=geokrety
  - export PGDATABASE=geokrety
  # install extensions
  - psql -c "CREATE EXTENSION postgis;"
  - psql -c "CREATE EXTENSION postgis_raster;"
  - psql -c "CREATE EXTENSION pgcrypto WITH SCHEMA public;"
  - psql -c "CREATE EXTENSION pgtap;"
  - psql -c "\dx"
  - psql -c "\dT *.plan"
  # Install schema
  - psql < website/db/dumps/public-schema.sql
  - psql < website/db/dumps/secure-schema.sql
  - psql < website/db/crypto/demo-keys.sql
  - psql < website/db/dumps/geokrety-schema.sql
  - psql < website/db/dumps/gk_waypoints_country.data.sql
  - psql < website/db/dumps/gk_waypoints_types.data.sql
  - psql < website/db/dumps/phinxlogs.data.sql
  - pg_restore --host "localhost" --dbname "geokrety" --data-only --disable-triggers --verbose --schema "public" --table "countries" website/db/dumps/public-data.tar
  # import SRTM subset for tests
  - website/db/tests-srtm-import.sh

install:
  - composer install --dev
  - phpenv config-rm xdebug.ini || return 0

before_script:
  - export GK_DB_HOST="localhost"
  - export GK_DB_NAME="geokrety"
  - export GK_DB_USER="geokrety"
  - export GK_DB_PASSWORD="geokrety"

script:
  # Check against CRLF
  - scripts/check-crlf.sh
  # Check against trailing whitespaces on php files
  - scripts/check-trailing-spaces.sh .
  # Check against non utf-8 files
  - scripts/check-utf8.sh .
  # Check php syntax
  - scripts/phplint.sh ./website/
  # Check CS fixer
  - vendor/bin/php-cs-fixer --no-interaction --dry-run --diff -v fix
#  # Install database
#  - (cd website && ../vendor/bin/phinx migrate)
#  # Check the database
#  - PGPASSWORD=geokrety PGOPTIONS=--search_path=public,pgtap,geokrety pg_prove -d geokrety -U geokrety -h localhost -ot website/db/tests/test*.sql
#  # Seed database with initial values
#  - (cd website && ../vendor/bin/phinx seed:run)
#  # Unit tests with PHPUnit ; output to stderr to prevent session issues https://stackoverflow.com/a/38045422/944936
#  - vendor/bin/phpunit --stderr
#  - (cd website/public && php index.php /health)

stages:
  - name: test
  - name: deploy
    if: branch IN (master, boly38, feature/new-theme) AND type = 'push'
  - name: qaWait
    if: branch IN (feature/new-theme, feature/ntQA) AND env(TRAVIS_QA_TOKEN) AND type = 'push'
  - name: qaTests
    if: branch IN (master, boly38, feature/new-theme) AND env(TRAVIS_QA_TOKEN) AND type = 'push'

jobs:
  include:
    - stage: deploy
      script:
        - scripts/export-translations-to-crowdin.sh
    - stage: qaWait
      script:
        - bash ./scripts/app_version_wait.sh ${TRAVIS_BRANCH}
    - stage: qaTests
      script:
        # TRAVIS_QA_TOKEN from https://travis-ci.org/geokrety/geokrety-website/settings
        # TRAVIS_BRANCH   from https://docs.travis-ci.com/user/environment-variables/
        - bash ./scripts/qatests_hook.sh ${TRAVIS_QA_TOKEN} ${TRAVIS_BRANCH}
        - bash ./scripts/qatests_wait.sh ${TRAVIS_QA_TOKEN}

notifications:
  # doc: https://docs.travis-ci.com/user/notifications/#configuring-irc-notifications
  irc:
    channels:
      - "chat.freenode.net#geokrety"
    on_success: always
    on_failure: always
    template:
      - "%{build_url} WEBSITE %{build_number} | %{branch} - %{commit} | %{result}"
